name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'repository version as git sha, tag, or branch'
        required: true
        default: ''

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: fetch secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        id: secrets
        with:
          credentials: ${{ secrets.GCP_SA_SECRETMANAGER_KEY }}
          secrets: |
            GITHUB_PAT_MISHAMILOVIDOV:osito-oto/GITHUB_PAT_MISHAMILOVIDOV

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: install yarn
        run: npm install -g yarn

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache npm modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn install

      - name: build application
        working-directory: ./website
        run: yarn build

      - name: archive build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: ./website/build

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: fetch secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        id: secrets
        with:
          credentials: ${{ secrets.GCP_SA_SECRETMANAGER_KEY }}
          secrets: |
            GCP_SA_FIREBASE_EMAIL:osito-oto/GCP_SA_FIREBASE_EMAIL
            GCP_SA_FIREBASE_KEY:osito-oto/GCP_SA_FIREBASE_KEY

      - name: setup gcloud for firebase
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: osito-oto
          service_account_email: ${{ steps.secrets.outputs.GCP_SA_FIREBASE_EMAIL }}
          service_account_key: ${{ steps.secrets.outputs.GCP_SA_FIREBASE_KEY }}

      - name: export command to fetch firebase access token
        run: echo "CMD_FETCH_FIREBASE_TOKEN=gcloud auth print-access-token --quiet" >> $GITHUB_ENV
        shell: bash

      - name: mask firebase access token
        run: echo "::add-mask::$(eval "$CMD_FETCH_FIREBASE_TOKEN")"
        shell: bash

      - name: export firebase access token
        run: echo "FIREBASE_TOKEN=$(eval "$CMD_FETCH_FIREBASE_TOKEN")" >> $GITHUB_ENV
        shell: bash

      - name: download build artifacts
        uses: actions/download-artifact@v1
        working-directory: ./website
        with:
          name: build

      - name: set firebase project
        uses: w9jds/firebase-action@v1.2.0
        working-directory: ./website
        with:
          args: use --add osito-oto
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}

      # - name: deploy firestore indexes
      #   uses: w9jds/firebase-action@v1.2.0
      #   with:
      #     args: deploy --only firestore:indexes
      #   env:
      #     FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}
      
      # - name: deploy firestore rules
      #   uses: w9jds/firebase-action@v1.2.0
      #   with:
      #     args: deploy --only firestore:rules
      #   env:
      #     FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}

      - name: apply target for hosting deploy
        uses: w9jds/firebase-action@v1.2.0
        working-directory: ./website
        with:
          args: target:apply hosting thunderbandit thunderbandit
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}

      - name: deploy hosting
        uses: w9jds/firebase-action@v1.2.0
        working-directory: ./website
        with:
          args: deploy --only hosting:thunderbandit
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}

      - name: delete artifacts
        uses: geekyeggo/delete-artifact@1-glob-support
        with:
          name: '*'
          useGlob: true