name: Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check:
          - yarn lint
          - yarn lint:commits
          - yarn test:ci
          - terraform fmt -check
          - terraform validate
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup node
        if: ${{ contains(matrix.check, 'yarn') }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: install yarn
        if: ${{ contains(matrix.check, 'yarn') }}
        run: npm install -g yarn

      - name: get yarn cache directory path
        if: ${{ contains(matrix.check, 'yarn') }}
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache npm modules
        if: ${{ contains(matrix.check, 'yarn') }}
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        if: ${{ contains(matrix.check, 'yarn') }}
        working-directory: ./web
        run: yarn install

      - name: run yarn check
        if: ${{ contains(matrix.check, 'yarn') }}
        working-directory: ./web
        run: ${{ matrix.check }}

      - name: setup terraform
        if: ${{ contains(matrix.check, 'terraform') }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0

      - name: initialize terraform
        if: ${{ contains(matrix.check, 'terraform') }}
        run: terraform init -backend=false

      - name: run terraform check
        if: ${{ contains(matrix.check, 'terraform') }}
        working-directory: ./infrastructure
        run: ${{ matrix.check }}

  label:
    name: Label
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: label pull request
        uses: TimonVS/pr-labeler-action@v3
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # TODO: add job to update pull request title to adhere to convential commit specification
